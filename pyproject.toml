[tool.poetry]
name = "data_engineering_toolkit"
version = "2.0.0"
description = "Handel Typical Data Engineering Tasks Handel Typical Data Engineering Tasks, including: Storage, Formatting, Tagging / Labelling, Profiling, Cleaning, Rules, Transformations, Encryption. This project is under a proprietary but permissable license. See LICENSE file for more details."
authors = ["Ryan Julyan <ryan@julyan.biz>"]
readme = "README.md"
license = "Proprietary"
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
]
keywords = ["data-engineering", "storage", "formatting", "tagging", "labelling", "profiling", "cleaning", "rules", "transformations", "encryption", "data"]
packages = [
    { include = "data_engineering_toolkit", from = "src" }
]
include = ["src/data_engineering_toolkit/*"]

[tool.poetry.dependencies]
python = ">=3.10.0,<3.11.5"
typing_extensions = "*"
pandas = "*"
numpy = "*"
ydata-profiling = "*"
osmium = "*"
requests = "*"
tqdm = "*"
beautifulsoup4 = "*"

[tool.poetry.dev-dependencies]
black = "*"
mypy = "*"
bumpver = "*"
isort = "*"
pip-tools = "*"
pytest = "*"
pandas-stubs = "*"
build = "*"

[tool.poetry.extras]
dev = ["black", "mypy", "bumpver", "isort", "pip-tools", "pytest", "pandas-stubs", "build"]
full = ["pandas"]
pandas = ["pandas"]

[tool.urls]
"Homepage" = "https://github.com/RyanJulyan/DataEngineeringToolkit"

[tool.scripts]
data_engineering_toolkit = "data_engineering_toolkit.__main__:main"

[tool.pyright]
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md
useLibraryCodeForTypes = true
exclude = [".cache"]

[tool.ruff]
# https://beta.ruff.rs/docs/configuration/
select = ['E', 'W', 'F', 'I', 'B', 'C4', 'ARG', 'SIM']
ignore = ['W291', 'W292', 'W293']

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bumpver]
current_version = "1.0.0"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message  = "Bump version {old_version} -> {new_version}"
commit          = true
tag             = true
push            = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/data_engineering_toolkit/__init__.py" = [
    '__version__ = "{version}"',
    "{pep440_version}",
]
"README.md" = [
    'current_version = "{version}"',
    "{pep440_version}",
]